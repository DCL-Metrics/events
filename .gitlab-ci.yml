stages:
  - install
  - build
  # - test
  - deploy

services:
  - docker:dind

# Cache modules in between jobs
cache:
  # key: ${CI_COMMIT_REF_SLUG}
  key: ${CI_COMMIT_REF_NAME}
  paths:
    - .npm/

build:code:
  stage: install
  image: decentraland/ci-node:latest
  only:
    - master
    - staging
    - release
  artifacts:
    paths:
      - lib
      - public
      - static
      - package.json
    when: on_success
    expire_in: 30 days
  script:
    - npm install --cache .npm --prefer-offline
    - dcl-env
    - pulumi stack --cwd .ci select "website-events-$ENVIRONMENT"
    - source ./node_modules/.bin/pulumi-environment
    - env

# build:docker:
#   stage: build
#   image: docker:latest
#   dependencies:
#     - build:code
#   only:
#     - master
#     - staging
#     - release
#   services:
#     - docker:dind
#   before_script:
#     - source .ci/env.sh
#     - source ".ci/.env.$NODE_ENV"
#     - env
#     - apk add --no-cache python3 py3-pip
#     - pip install awscli
#     - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin "$CI_REGISTRY_REPOSITORY"
#   script:
#     - DOCKER_BUILDKIT=1 docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" .
#     - DOCKER_BUILDKIT=1 docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"

# deploy:
#   stage: deploy
#   image: decentraland/ci-node:latest
#   dependencies:
#     - build:code
#     - build:docker
#   only:
#     - master
#     - staging
#     - release
#   script:
#     - source .ci/env.sh
#     - source ".ci/.env.$NODE_ENV"
#     - cd .ci && npm install --cache ../.npm --prefer-offline
#     - dcl-lock-sync
#     - dcl-up website-referral
#     - dcl-sync-release
#     - cd .. && dcl-upload public
#     - cd .ci && dcl-cache-invalidation
